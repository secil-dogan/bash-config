alias mdsol='cd ~/Desktop/workspace/mdsol'

STUDY_MANAGEMENT_UI_PATH="/Users/sdoganpalaska/Desktop/workspace/mdsol/study_management_ui"
alias mdcore="cd $STUDY_MANAGEMENT_UI_PATH/core"
alias mdoverview="cd $STUDY_MANAGEMENT_UI_PATH/overview"
alias mdmilestones="cd $STUDY_MANAGEMENT_UI_PATH/milestones"
alias mdenrollments="cd $STUDY_MANAGEMENT_UI_PATH/enrollments"

mdprepare() {
    # check if at the right directory
    WORKING_DIR="$(pwd)"

    if [[ "$WORKING_DIR" != "$STUDY_MANAGEMENT_UI_PATH/enrollments" ]] &&
       [[ "$WORKING_DIR" != "$STUDY_MANAGEMENT_UI_PATH/milestones" ]] &&
       [[ "$WORKING_DIR" != "$STUDY_MANAGEMENT_UI_PATH/overview" ]]; then
        echo 'You must be in one of the study_management_ui subprojects'
        return 0
    fi

    if [[ $1 == '--help' ]]; then
        echo "mdprepare                    Use artifactory"
        echo "mdprepare --with-core        Use $STUDY_MANAGEMENT_UI_PATH/core"
    elif [[ $1 == '--with-core' ]]; then
        CORE_BRANCH="$(grab_git_branch --git-dir $STUDY_MANAGEMENT_UI_PATH/core/.git)"

        if [[ $CORE_BRANCH != 'develop' ]]; then
            echo 'Core is not in "develop" branch. Switching..'
            git --git-dir $STUDY_MANAGEMENT_UI_PATH/core.git checkout develop
            CORE_BRANCH_UPDATED="$(grab_git_branch --git-dir $STUDY_MANAGEMENT_UI_PATH/core/.git)"

            if [[ $CORE_BRANCH_UPDATED != 'develop' ]]; then
                echo 'Could not switch to develop. Please fix "core" manually.'
                return 0
            fi
        fi

        echo "Pulling newest version of core..."
        git --git-dir $STUDY_MANAGEMENT_UI_PATH/core/.git pull

        echo "Removing local study_management_ui library..."
        rm -rf ./node_modules/@mdsol/study_management_ui

        echo "Creating a symlink with the core project..."
        ln -s $STUDY_MANAGEMENT_UI_PATH/core ./node_modules/@mdsol/study_management_ui

        echo "Running \`npm run bootstrap\`"
        npm run bootstrap
    elif [[ $# -eq 0 ]]; then # no argument is given
        echo "Removing local study_management_ui library..."
        rm -rf ./node_modules/@mdsol/study_management_ui

        echo "Doing a fresh \`npm install\`..."
        npm install

        echo "Running \`npm run bootstrap\`..."
        npm run bootstrap
    else
        echo 'Use mdprepare --help to learn about the usage.'
    fi
}

mdkill_server() {
    SERVER_PID=`lsof -i:8080 | tail -1 | awk '{print $2}'`
    if [[ ! $SERVER_PID -eq 0 ]]; then
        kill -9 $SERVER_PID
        echo 'Killed server process running on port 8080'
    else
        echo 'Could not find server process'
    fi
}

mdkill_client() {
    CLIENT_PID=`lsof -i:3000 | tail -1 | awk '{print $2}'`
    if [[ ! $CLIENT_PID -eq 0 ]]; then
        kill -9 $CLIENT_PID
        echo 'Killed client process running on port 3000'
    else
        echo 'Could not find client process'
    fi
}

mdkill() {
    if [[ $1 == '--client' ]] || [[ $1 == '-c' ]]; then
        mdkill_client
    elif [[ $1 == '--server' ]] || [[ $1 == '-s' ]]; then
        mdkill_server
    elif [[ $1 == '--all' ]] || [[ $1 == '-a' ]]; then
        mdkill_client
        mdkill_server
    elif [[ ! $1 -eq 0 ]]; then
        PID=`lsof -i:$1 | tail -1 | awk '{print $2}'`

        if [[ $PID -eq 0 ]]; then
            echo "Could not find process"
            return 0
        fi

        kill -9 $PID
        echo 'Killed process'
    else
        echo '## USAGE ##'
        echo 'mdkill -c or --client        Only kill client'
        echo 'mdkill -s or --server        Only kill server'
        echo 'mdkill -a or --all           Kill client & server'
    fi
}

grab_git_branch() {
    if [[ $# -eq 0 ]]; then
        git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ \1/' | xargs
    else
        git $1 $2 branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ \1/' | xargs
    fi
}
